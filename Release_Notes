MSXPi v1.3 Release Notes
========================
This is mainly a PCB redesign and firmware om the CPLD. From v1.3, firmware (msxpi.pof) is no longer compatible with previous versions due to pin mapping changes.
- Changed CPLD pin mappings to optimize PCB routing
- Changed the EEPROM footprint from DIP to PLCC
- Improved routing with power rails uninterrupted and wide.
- 5V power rail (for PI and EEPROM) routed on the edge of the card to avoid EMI 
- Bottom layer is now fully ground plane, with uninterrupted gnd plane across the PCB#
- Rev1: Updated silk in back of pcb to reflect new jumper names

MSXPi v1.2.1b Release Notes
===============================
- Activity LED now connects to RPi Ready signal - allows to see when RPi Server is online
- SPI_RDY resistor changed to pull-down 
- Re-routed power rails to minimise EMI & cross-signal interferences
- BASIC programs updated to run also under openMSX; defaults to 80 columns
- Firmware (CPLD) logic updated but keeping compatibility with previous versions; version "1100"

MSXPi v1.2 Release Notes
========================
- Added support in the software for the extension MSXPi for openMSX
- Added Pull-Up resistors to SPI_CS & SPI_RDY
- Added Push-button to Shutdown and Reboot Raspberry Pi (via interruption)
- Removed MSX RESET button from the interface
- Added diode in the 5V rail - allow Raspberry Pi to be powered
  via USB without leaking to the MSX
- Changed the 5V rail capacitor to 10uF
- Made optimisation to the CPLD firmware to save some logic gates
- Extensive changes to all software for stability
- Added new build file msxpibios.rom with MSXPi BIOS for BASIC CALL commands
- Lots of bug fixes to the code
  
MSXPi v1.1 Release Notes
========================
- New PCB layout
- New basic IO routines (used by all components)
- Lots of code changes to improve stability
- Improved pcopy: can decompress files, use virtual remote devices  
- Added BASIC API to support development in BASIC
- Added IRC.BAS - IRC client to chat in webchat.freenode.net
- Added BASIC programs from Retropix Brazil:
  - DOLAR.BAS
  - WEATHER.BAS
- Lots of bug fixes and improvements

MSXPi v1.0 Release Notes
========================
This release has some major changes to the hardware and softwar components.

On the hardware side:

- Replaced the EPROM 27C256 by AT28C256 EEPROM (Electronically erasable/rewritable)
- Implemented the /wait signal on the PCB (CPLD does not drives at this time, it is always tai-state)
- Schematics was updated to support the /wait signal
- CPLD logic update to drive /wait to tri-state (to avoid MSX to freeze)
- LED is driven by the SPI_CS signal (needed that CPLD pin for the /wait signal)
- Removed the jumper for the BUSDIR signal (since it is always driven by CPLD internal logic)
- Added pull-up resistors for all Raspberry Pins used in the design
- Added by-pass capacitors for all CIs.

On the software side:

- The server component was mostly rewritten to be more modular
- Every command now can be implemented in a self-contained function inside msxpi-server.py
- No changes are needed in the main loop of the program
- Main data transfer routine (senddatablock / receivedatablock) rewritten to allow retries and block size configuration
- Many functions removed (deprecated) resulting in a less complex and easier to maintain and expand solution
- All clients rewritten based on a simple and better communication logic
- Addition of new program AT28C256.COM to write ROMs to the new EEPROM in the interface

Other non functional changes includes a new design using KiCad 5 instead of Eagle, some more jumpers to support new EEPROM features.

Limitations and bugs
- To write a ROM to the EEPROM, you may need to specify the slot number where the MSXPi is plugged - there is not, currently, an automated and fail-safe method to detect in which slot the EPROM is connected.
- The CPLD logic and software are not benefiting of the /wait signal (future improvement)
- When booted from the MSX-DOS1 on Raspberry Pi disk image, the command PCOPY.COM cannot copy files from remote locations.

MSXPi v0.8.2 Release Notes
==========================


This version contains all improvements made to all software components. There are changes to the ROM, BIOS, CALL commands, MSXPi-Client and MSX-DOS commands.
The server is officially written in Python, and the C version won't be updated anymore - support will still be available.

What can be done with MSXPi
---------------------------

The MSXPi interface is fully open source, and anyone can develop more applications.
Currently available functionalities and applications:

- Update of MSX-DOS date and time at boot time
- Config RPi wifi
- Run commands on RPi and see output on MSX screen
- Access RPi sd card: list and copy files, load .roms and .bin programs.
- Access Internet: list and copy files, load .roms and .bin programs.
- Use disk images on RPi sd card and boot from them into MSX-DOS
- Play music files on RP, control volume and music loops
- Connect to IRC and chat
- Connect to WhatsApp and chat. Client allows also to register the phone on WhatsApp (experimental, do no user your main WhatsApp phone).


List of features
----------------

- Server written in Python
- Mass transfer performed by C external program, for better performance
- Online updates to all software from a http repository
- Demonstration clients for IRC and WhatsApp, functional.
- Support for both access to SD card on RPi, and remote network files - can list, copy files, run rooms
- MSX-DOS commands to use the interface
- CALL commands to use the interface from BASIC
- BASIC client with command interpreter to use the interface
- CPLD and JTAG for logic reprogramming
- EPROM socketed to allow removal for updates using an EPROM programmer
- Two 16K EPROM banks switched by jumper (can have two different ROM versions on same EPROM)
- Compatible with all RPi models


Known Bugs
----------

Problem: Occasionally, there might happen that some commands get out of sync. This can be identified by screen being filled with dots.
Workaround: This happens more frequently when lots of reads and writes are happening, such as when running msxpiupd.bat. Try running the command again. If RPi does not recover, then reboot RPi.

Problem: Sometimes commands returns "Communication Error".
Workaround: Run PRESET and PDIR, sometimes it recovers from the problem. If it does not, restart RPi.
